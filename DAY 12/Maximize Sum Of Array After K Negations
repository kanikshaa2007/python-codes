class Solution(object):
    def largestSumAfterKNegations(self, nums, k):
        """
        :type nums: List[int]
        :type k: int
        :rtype: int
        """
        nums.sort()
        new_arr=[]
        sums=0
        i=0
        while(k and i<len(nums)):
            if(nums[i]<0):
                number=-(nums[i])
                sums+=number
                new_arr.append(number)
            elif(nums[i]>=0  and new_arr!=[]):
                numms=min(new_arr[-1],nums[i])
                if(numms<0):
                    number=-(numms)
                elif(nums>=0):
                    number=-(numms)
                new_arr.append(number)
                sums-=numms
                sums+=number
                sums+=nums[i]
            elif(nums[i]>=0 and new_arr==[]):
                numms=-(nums[i])
                sums+=numms
                new_arr.append(numms)
            k-=1
            i+=1
        if(i<len(nums)):
            for j in range(i,len(nums)):
                sums+=nums[j]
        if(k!=0):
            new_arr.sort()
            number=new_arr[0]
            if(k%2==0):
                if(new_arr[i]>=0):
                    return sums
            else:
                number=-new_arr[0]
                sums-=new_arr[0]
                sums+=number
        return sums
        
